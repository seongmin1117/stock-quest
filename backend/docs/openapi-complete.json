{
  "openapi": "3.1.0",
  "info": {
    "title": "StockQuest API",
    "description": "Stock Trading Simulation Platform API",
    "contact": {
      "name": "StockQuest Team",
      "email": "team@stockquest.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    },
    {
      "url": "https://api.stockquest.com",
      "description": "Production server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "챌린지",
      "description": "투자 챌린지 관련 API"
    },
    {
      "name": "인증",
      "description": "사용자 인증 관련 API"
    },
    {
      "name": "Company Sync",
      "description": "Company data synchronization APIs (Admin only)"
    },
    {
      "name": "Companies",
      "description": "Company and category management APIs"
    },
    {
      "name": "Session Management",
      "description": "세션 관리 API (관리자용)"
    },
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    },
    {
      "name": "리더보드",
      "description": "챌린지 리더보드 관련 API"
    },
    {
      "name": "챌린지 세션",
      "description": "챌린지 세션 및 거래 관련 API"
    },
    {
      "name": "커뮤니티",
      "description": "챌린지 커뮤니티 관련 API"
    }
  ],
  "paths": {
    "/api/v1/risk/portfolios/{portfolioId}/risk-budget": {
      "get": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "getRiskBudget",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RiskBudgetResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "updateRiskBudget",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RiskBudgetUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RiskBudgetResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/notification-settings": {
      "get": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "getNotificationSettings",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "updateNotificationSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotificationSettingsUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationSettingsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/signals/{signalId}/performance": {
      "put": {
        "tags": [
          "ml-signals-controller"
        ],
        "operationId": "updateSignalPerformance",
        "parameters": [
          {
            "name": "signalId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PerformanceUpdateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}": {
      "get": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "getChallengeById",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "updateChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateChallengeCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/portfolios/{portfolioId}/var": {
      "post": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "calculatePortfolioVaR",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VaRCalculationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VaRCalculationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/portfolios/{portfolioId}/stress-test": {
      "post": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "runStressTest",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StressTestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StressTestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/alerts/{alertId}/resend": {
      "post": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "resendAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendNotificationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/signals/generate/batch": {
      "post": {
        "tags": [
          "ml-signals-controller"
        ],
        "operationId": "generateBatchSignals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchSignalRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BatchSignalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/signals/filter": {
      "post": {
        "tags": [
          "ml-signals-controller"
        ],
        "operationId": "filterSignalsByMarketCondition",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FilterSignalsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FilteredSignalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/portfolio-optimization/{portfolioId}/optimize": {
      "post": {
        "tags": [
          "portfolio-optimization-controller"
        ],
        "operationId": "optimizePortfolio",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OptimizationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioOptimizationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/portfolio-optimization/{portfolioId}/efficient-frontier": {
      "post": {
        "tags": [
          "portfolio-optimization-controller"
        ],
        "operationId": "calculateEfficientFrontier",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EfficientFrontierRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EfficientFrontierResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/portfolio-optimization/{portfolioId}/backtest": {
      "post": {
        "tags": [
          "portfolio-optimization-controller"
        ],
        "operationId": "runBacktest",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BacktestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dca/simulate": {
      "post": {
        "tags": [
          "dca-controller"
        ],
        "operationId": "simulate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DCASimulationRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/sync/{symbol}": {
      "post": {
        "tags": [
          "Company Sync"
        ],
        "summary": "Sync single company",
        "description": "Synchronize market data for a single company (Admin only)",
        "operationId": "syncCompany",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Stock symbol to sync",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "example": "005930"
          }
        ],
        "responses": {
          "200": {
            "description": "Sync completed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncResult"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Admin only",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncResult"
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/companies/sync/scheduled": {
      "post": {
        "tags": [
          "Company Sync"
        ],
        "summary": "Trigger scheduled sync manually",
        "description": "Manually trigger the scheduled synchronization (Admin only)",
        "operationId": "triggerScheduledSync",
        "responses": {
          "200": {
            "description": "Scheduled sync triggered",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Admin only",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/companies/sync/all": {
      "post": {
        "tags": [
          "Company Sync"
        ],
        "summary": "Sync all companies",
        "description": "Synchronize market data for all active companies (Admin only)",
        "operationId": "syncAllCompanies",
        "responses": {
          "200": {
            "description": "Batch sync completed",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncBatchResult"
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized - Admin only",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySyncBatchResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/companies/search": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Search companies (GET)",
        "description": "Search companies using query parameters",
        "operationId": "searchCompaniesGet",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "categories",
            "in": "query",
            "description": "Category filter",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "sector",
            "in": "query",
            "description": "Sector filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minPopularity",
            "in": "query",
            "description": "Minimum popularity score",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field",
            "required": false,
            "schema": {
              "type": "string",
              "default": "popularityScore"
            }
          },
          {
            "name": "order",
            "in": "query",
            "description": "Sort direction",
            "required": false,
            "schema": {
              "type": "string",
              "default": "desc"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySearchResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Search companies",
        "description": "Search companies with filters and pagination",
        "operationId": "searchCompanies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanySearchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backtesting/run": {
      "post": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "runBacktest_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BacktestRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backtesting/compare": {
      "post": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "compareBacktests",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BacktestComparisonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestComparisonResult"
                }
              }
            }
          }
        }
      }
    },
    "/api/sessions/{sessionId}/orders": {
      "get": {
        "tags": [
          "챌린지 세션"
        ],
        "summary": "주문 내역 조회",
        "description": "챌린지 세션의 주문 내역을 조회합니다",
        "operationId": "getOrders",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "챌린지 세션"
        ],
        "summary": "주문 실행",
        "description": "챌린지 세션에서 주문을 실행합니다",
        "operationId": "placeOrder",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PlaceOrderRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PlaceOrderResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sessions/{sessionId}/close": {
      "post": {
        "tags": [
          "챌린지 세션"
        ],
        "summary": "챌린지 종료",
        "description": "챌린지 세션을 종료하고 결과를 확인합니다",
        "operationId": "closeChallenge",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CloseChallengeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}/start": {
      "post": {
        "tags": [
          "챌린지"
        ],
        "summary": "챌린지 시작",
        "description": "새로운 챌린지 세션을 시작합니다",
        "operationId": "startChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "forceRestart",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StartChallengeResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}/posts": {
      "get": {
        "tags": [
          "커뮤니티"
        ],
        "summary": "게시글 목록 조회",
        "description": "특정 챌린지의 게시글 목록을 조회합니다",
        "operationId": "getPostList",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PostResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "커뮤니티"
        ],
        "summary": "게시글 작성",
        "description": "특정 챌린지에 게시글을 작성합니다",
        "operationId": "createPost",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePostRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PostResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}/posts/{postId}/comments": {
      "get": {
        "tags": [
          "커뮤니티"
        ],
        "summary": "댓글 목록 조회",
        "description": "특정 게시글의 댓글 목록을 조회합니다",
        "operationId": "getCommentList",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "커뮤니티"
        ],
        "summary": "댓글 작성",
        "description": "특정 게시글에 댓글을 작성합니다",
        "operationId": "createComment",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "postId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}/leaderboard/calculate": {
      "post": {
        "tags": [
          "리더보드"
        ],
        "summary": "리더보드 계산",
        "description": "챌린지 종료 후 리더보드를 계산합니다",
        "operationId": "calculateLeaderboard",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeaderboardResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "인증"
        ],
        "summary": "회원가입",
        "description": "새로운 사용자 계정을 생성합니다",
        "operationId": "signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignupRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "회원가입 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "post": {
        "tags": [
          "인증"
        ],
        "summary": "토큰 갱신",
        "description": "리프레시 토큰으로 새로운 액세스 토큰을 발급받습니다",
        "operationId": "refreshToken",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "토큰 갱신 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "리프레시 토큰 만료 또는 유효하지 않음",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": [
          "인증"
        ],
        "summary": "로그아웃",
        "description": "현재 세션을 종료하고 토큰을 무효화합니다",
        "operationId": "logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "로그아웃 성공",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "잘못된 요청",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "인증"
        ],
        "summary": "로그인",
        "description": "이메일과 비밀번호로 로그인하며, 선택적으로 리다이렉트 URL을 지원합니다",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "로그인 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "인증 실패",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/sessions/users/{userId}/force-end-all": {
      "post": {
        "tags": [
          "Session Management"
        ],
        "summary": "사용자의 모든 활성 세션 강제 종료",
        "description": "사용자의 모든 활성 세션을 강제로 종료합니다",
        "operationId": "forceEndAllActiveSessionsByUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "사용자 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "종료 사유",
            "required": false,
            "schema": {
              "type": "string",
              "default": "관리자 일괄 종료"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/sessions/users/{userId}/challenges/{challengeId}/force-end": {
      "post": {
        "tags": [
          "Session Management"
        ],
        "summary": "활성 세션 강제 종료",
        "description": "사용자의 특정 챌린지 활성 세션을 강제로 종료합니다",
        "operationId": "forceEndActiveSession",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "사용자 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "challengeId",
            "in": "path",
            "description": "챌린지 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "description": "종료 사유",
            "required": false,
            "schema": {
              "type": "string",
              "default": "관리자 강제 종료"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/sessions/cleanup/stale-ready": {
      "post": {
        "tags": [
          "Session Management"
        ],
        "summary": "오래된 READY 세션 정리",
        "description": "지정된 시간 이상 READY 상태로 유지된 세션들을 정리합니다",
        "operationId": "cleanupStaleReadySessions",
        "parameters": [
          {
            "name": "cutoffHours",
            "in": "query",
            "description": "정리 기준 시간(시간 단위)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges": {
      "get": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "getChallenges",
        "parameters": [
          {
            "name": "criteria",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ChallengeSearchCriteria"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengePage"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "createChallenge",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChallengeCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}/complete": {
      "post": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "completeChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}/clone": {
      "post": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "cloneChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "newTitle",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}/archive": {
      "post": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "archiveChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}/activate": {
      "post": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "activateChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/from-template": {
      "post": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "createChallengeFromTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFromTemplateCommand"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/loggers/{name}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'loggers-name'",
        "operationId": "loggerLevels",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'loggers-name'",
        "operationId": "configureLogLevel",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "enum": [
                  "TRACE",
                  "DEBUG",
                  "INFO",
                  "WARN",
                  "ERROR",
                  "FATAL",
                  "OFF"
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/v1/risk/alerts/{alertId}/status": {
      "patch": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "updateAlertStatus",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AlertStatusUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RiskAlertResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}/status": {
      "patch": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "changeStatus",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DRAFT",
                "SCHEDULED",
                "ACTIVE",
                "COMPLETED",
                "ARCHIVED",
                "CANCELLED"
              ]
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/{challengeId}/featured": {
      "patch": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "setFeaturedChallenge",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "featured",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Challenge"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/portfolios/{portfolioId}/var/history": {
      "get": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "getVaRHistory",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "method",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "HISTORICAL_SIMULATION",
                "PARAMETRIC",
                "MONTE_CARLO",
                "FILTERED_HISTORICAL",
                "EXTREME_VALUE_THEORY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageVaRCalculationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/dashboard": {
      "get": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "getRiskDashboard",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 7
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RiskDashboardResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/alerts": {
      "get": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "getRiskAlerts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "portfolioId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "severity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "CRITICAL",
                "HIGH",
                "MEDIUM",
                "LOW",
                "INFO"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ACTIVE",
                "ACKNOWLEDGED",
                "RESOLVED",
                "EXPIRED",
                "SUPPRESSED",
                "ESCALATED"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PageRiskAlertResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/risk/alerts/{alertId}": {
      "get": {
        "tags": [
          "risk-management-controller"
        ],
        "operationId": "getRiskAlert",
        "parameters": [
          {
            "name": "alertId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RiskAlertResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/signals/generate/{symbol}": {
      "get": {
        "tags": [
          "ml-signals-controller"
        ],
        "operationId": "generateSignal",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/TradingSignalResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/signals/active": {
      "get": {
        "tags": [
          "ml-signals-controller"
        ],
        "operationId": "getActiveSignals",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ActiveSignalsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/portfolio-optimization/{portfolioId}/rebalancing-suggestions": {
      "get": {
        "tags": [
          "portfolio-optimization-controller"
        ],
        "operationId": "getRebalancingSuggestions",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RebalancingSuggestionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ml/portfolio-optimization/{portfolioId}/history": {
      "get": {
        "tags": [
          "portfolio-optimization-controller"
        ],
        "operationId": "getOptimizationHistory",
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/OptimizationHistoryResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/dca/test": {
      "get": {
        "tags": [
          "dca-controller"
        ],
        "operationId": "testEndpoint",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/{symbol}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get company by symbol",
        "description": "Retrieve a specific company by its stock symbol",
        "operationId": "getCompanyBySymbol",
        "parameters": [
          {
            "name": "symbol",
            "in": "path",
            "description": "Stock symbol (e.g., 005930)",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "example": "005930"
          }
        ],
        "responses": {
          "200": {
            "description": "Company found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Company not found",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CompanyResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/top": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get top companies",
        "description": "Get top companies by popularity",
        "operationId": "getTopCompanies",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of companies to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10,
              "maximum": 50,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/sync/status": {
      "get": {
        "tags": [
          "Company Sync"
        ],
        "summary": "Get sync status",
        "description": "Get the current synchronization status and history (Admin only)",
        "operationId": "getSyncStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SyncStatusResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/v1/companies/category/{categoryId}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get companies by category",
        "description": "Get all companies in a specific category",
        "operationId": "getCompaniesByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            },
            "example": "tech"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/companies/categories": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get all categories",
        "description": "Get all active company categories",
        "operationId": "getAllCategories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CompanyCategoryResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backtesting/status/{backtestId}": {
      "get": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "getBacktestStatus",
        "parameters": [
          {
            "name": "backtestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backtesting/results/{backtestId}": {
      "get": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "getBacktestResult",
        "parameters": [
          {
            "name": "backtestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BacktestResult"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "deleteBacktestResult",
        "parameters": [
          {
            "name": "backtestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backtesting/list": {
      "get": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "listBacktests",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BacktestSummary"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/sessions/{sessionId}": {
      "get": {
        "tags": [
          "챌린지 세션"
        ],
        "summary": "세션 상세 조회",
        "description": "챌린지 세션의 상세 정보를 조회합니다",
        "operationId": "getSessionDetail",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/sessions/{sessionId}/portfolio": {
      "get": {
        "tags": [
          "챌린지 세션"
        ],
        "summary": "포트폴리오 조회",
        "description": "챌린지 세션의 포트폴리오를 조회합니다",
        "operationId": "getPortfolio",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PortfolioResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "tags": [
          "dashboard-web-adapter"
        ],
        "operationId": "getDashboard",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardData"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges": {
      "get": {
        "tags": [
          "챌린지"
        ],
        "summary": "챌린지 목록 조회",
        "description": "활성 상태의 챌린지 목록을 조회합니다",
        "operationId": "getChallengeList",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}": {
      "get": {
        "tags": [
          "챌린지"
        ],
        "summary": "챌린지 상세 조회",
        "description": "특정 챌린지의 상세 정보를 조회합니다",
        "operationId": "getChallengeDetail",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeDetailResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}/leaderboard": {
      "get": {
        "tags": [
          "리더보드"
        ],
        "summary": "리더보드 조회",
        "description": "특정 챌린지의 리더보드를 조회합니다",
        "operationId": "getLeaderboard",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeaderboardResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/{challengeId}/instruments": {
      "get": {
        "tags": [
          "챌린지"
        ],
        "summary": "챌린지 상품 목록 조회",
        "description": "특정 챌린지에 포함된 금융상품 목록을 조회합니다",
        "operationId": "getChallengeInstruments",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeInstrumentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/challenges/active": {
      "get": {
        "tags": [
          "챌린지"
        ],
        "summary": "활성 챌린지 목록 조회",
        "description": "현재 활성 상태의 챌린지 목록을 조회합니다",
        "operationId": "getActiveChallenges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ChallengeListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/validate": {
      "get": {
        "tags": [
          "인증"
        ],
        "summary": "토큰 검증",
        "description": "현재 토큰의 유효성을 검증하고 사용자 정보를 반환합니다",
        "operationId": "validateToken",
        "responses": {
          "200": {
            "description": "토큰 유효",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "토큰 무효",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "인증"
        ],
        "summary": "현재 사용자 조회",
        "description": "JWT 토큰 기반으로 현재 인증된 사용자 정보를 조회합니다",
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "조회 성공",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "인증 실패",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/simulation/statistics": {
      "get": {
        "tags": [
          "simulation-controller"
        ],
        "operationId": "getSimulationStatistics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/simulation/states": {
      "get": {
        "tags": [
          "simulation-controller"
        ],
        "operationId": "getAllSimulationStates",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/simulation/sessions/{sessionId}/state": {
      "get": {
        "tags": [
          "simulation-controller"
        ],
        "operationId": "getSessionSimulationState",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {}
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/sessions/{sessionId}/status": {
      "get": {
        "tags": [
          "Session Management"
        ],
        "summary": "세션 상태 조회",
        "description": "특정 세션의 상태 정보를 조회합니다",
        "operationId": "getSessionStatus",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "세션 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SessionStatusInfo"
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/sessions/users/{userId}": {
      "get": {
        "tags": [
          "Session Management"
        ],
        "summary": "사용자 세션 히스토리 조회",
        "description": "특정 사용자의 모든 세션 참여 이력을 조회합니다",
        "operationId": "getUserSessionHistory",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "사용자 ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "exclusiveMinimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SessionStatusInfo"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/template/{templateId}": {
      "get": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "getChallengesByTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Challenge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/popular": {
      "get": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "getPopularChallenges",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Challenge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/featured": {
      "get": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "getFeaturedChallenges",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Challenge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/admin/challenges/category/{categoryId}": {
      "get": {
        "tags": [
          "admin-challenge-controller"
        ],
        "operationId": "getChallengesByCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Challenge"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actuator/threaddump": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'threaddump'",
        "operationId": "threadDump",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;charset=UTF-8": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/scheduledtasks": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'scheduledtasks'",
        "operationId": "scheduledTasks",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/sbom": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'sbom'",
        "operationId": "sboms",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/sbom/{id}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'sbom-id'",
        "operationId": "sbom",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/metrics": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'metrics'",
        "operationId": "listNames",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/metrics/{requiredMetricName}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'metrics-requiredMetricName'",
        "operationId": "metric",
        "parameters": [
          {
            "name": "requiredMetricName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/mappings": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'mappings'",
        "operationId": "mappings",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/loggers": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'loggers'",
        "operationId": "loggers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'info'",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health'",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/flyway": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'flyway'",
        "operationId": "flywayBeans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/env": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'env'",
        "operationId": "environment",
        "parameters": [
          {
            "name": "pattern",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/env/{toMatch}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'env-toMatch'",
        "operationId": "environmentEntry",
        "parameters": [
          {
            "name": "toMatch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/configprops": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'configprops'",
        "operationId": "configurationProperties",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/configprops/{prefix}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'configprops-prefix'",
        "operationId": "configurationPropertiesWithPrefix",
        "parameters": [
          {
            "name": "prefix",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/conditions": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'conditions'",
        "operationId": "conditions",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/caches": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'caches'",
        "operationId": "caches",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'caches'",
        "operationId": "clearCaches",
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/actuator/caches/{cache}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'caches-cache'",
        "operationId": "cache",
        "parameters": [
          {
            "name": "cache",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cacheManager",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'caches-cache'",
        "operationId": "clearCache",
        "parameters": [
          {
            "name": "cache",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cacheManager",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/actuator/beans": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'beans'",
        "operationId": "beans",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/backtesting/cancel/{backtestId}": {
      "delete": {
        "tags": [
          "backtesting-controller"
        ],
        "operationId": "cancelBacktest",
        "parameters": [
          {
            "name": "backtestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RiskBudgetUpdateRequest": {
        "type": "object",
        "properties": {
          "budgetType": {
            "type": "string",
            "enum": [
              "VAR_BASED",
              "VOLATILITY_BASED",
              "TRACKING_ERROR_BASED",
              "DRAWDOWN_BASED",
              "CAPITAL_BASED",
              "NOTIONAL_BASED",
              "CONCENTRATION_BASED",
              "LEVERAGE_BASED",
              "COMPOSITE",
              "REGULATORY"
            ]
          },
          "totalBudget": {
            "type": "number"
          },
          "assetLimits": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        },
        "required": [
          "budgetType",
          "totalBudget"
        ]
      },
      "RiskBudgetResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string"
          },
          "budgetType": {
            "type": "string",
            "enum": [
              "VAR_BASED",
              "VOLATILITY_BASED",
              "TRACKING_ERROR_BASED",
              "DRAWDOWN_BASED",
              "CAPITAL_BASED",
              "NOTIONAL_BASED",
              "CONCENTRATION_BASED",
              "LEVERAGE_BASED",
              "COMPOSITE",
              "REGULATORY"
            ]
          },
          "totalBudget": {
            "type": "number"
          },
          "usedBudget": {
            "type": "number"
          },
          "availableBudget": {
            "type": "number"
          },
          "utilizationRate": {
            "type": "number"
          },
          "allocationByAsset": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "budgetStatus": {
            "type": "string"
          },
          "nextReview": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "NotificationSettingsUpdateRequest": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string"
          },
          "enabledChannels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "SLACK",
                "TEAMS",
                "WEBHOOK",
                "IN_APP",
                "MOBILE_PUSH",
                "DASHBOARD"
              ]
            }
          },
          "severityThresholds": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "quietHours": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "NotificationSettingsResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string"
          },
          "enabledChannels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "SLACK",
                "TEAMS",
                "WEBHOOK",
                "IN_APP",
                "MOBILE_PUSH",
                "DASHBOARD"
              ]
            }
          },
          "severityThresholds": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          },
          "quietHours": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "PerformanceUpdateRequest": {
        "type": "object",
        "properties": {
          "currentPrice": {
            "type": "string"
          },
          "unrealizedReturn": {
            "type": "string"
          },
          "maxReturn": {
            "type": "string"
          },
          "maxDrawdown": {
            "type": "string"
          }
        }
      },
      "PerformanceUpdateResponse": {
        "type": "object",
        "properties": {
          "signalId": {
            "type": "string"
          },
          "updated": {
            "type": "boolean"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "UpdateChallengeCommand": {
        "type": "object",
        "properties": {
          "challengeId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "durationDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "availableInstruments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tradingRestrictions": {
            "type": "object",
            "additionalProperties": {}
          },
          "successCriteria": {
            "type": "object",
            "additionalProperties": {}
          },
          "learningObjectives": {
            "type": "string"
          },
          "marketScenarioDescription": {
            "type": "string"
          },
          "riskLevel": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedTimeMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "modifiedBy": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Challenge": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "templateId": {
            "type": "integer",
            "format": "int64"
          },
          "marketPeriodId": {
            "type": "integer",
            "format": "int64"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "challengeType": {
            "type": "string",
            "enum": [
              "MARKET_CRASH",
              "BULL_MARKET",
              "SECTOR_ROTATION",
              "VOLATILITY",
              "ESG",
              "INTERNATIONAL",
              "OPTIONS",
              "RISK_MANAGEMENT",
              "TOURNAMENT",
              "EDUCATIONAL",
              "COMMUNITY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SCHEDULED",
              "ACTIVE",
              "COMPLETED",
              "ARCHIVED",
              "CANCELLED"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "durationDays": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedDurationMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "periodStart": {
            "type": "string",
            "format": "date"
          },
          "periodEnd": {
            "type": "string",
            "format": "date"
          },
          "speedFactor": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "successCriteria": {
            "type": "object",
            "additionalProperties": {}
          },
          "marketScenario": {
            "type": "object",
            "additionalProperties": {}
          },
          "learningObjectives": {
            "type": "string"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "currentParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "entryRequirements": {
            "type": "object",
            "additionalProperties": {}
          },
          "availableInstruments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tradingRestrictions": {
            "type": "object",
            "additionalProperties": {}
          },
          "rewardStructure": {
            "type": "object",
            "additionalProperties": {}
          },
          "marketScenarioDescription": {
            "type": "string"
          },
          "riskLevel": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedTimeMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "featured": {
            "type": "boolean"
          },
          "isFeatured": {
            "type": "boolean"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "averageRating": {
            "type": "number"
          },
          "totalReviews": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "lastModifiedBy": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "instruments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeInstrument"
            }
          },
          "joinable": {
            "type": "boolean"
          },
          "highRisk": {
            "type": "boolean"
          },
          "longTerm": {
            "type": "boolean"
          },
          "popular": {
            "type": "boolean"
          },
          "tournament": {
            "type": "boolean"
          },
          "educational": {
            "type": "boolean"
          },
          "community": {
            "type": "boolean"
          },
          "highDifficulty": {
            "type": "boolean"
          }
        }
      },
      "ChallengeInstrument": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "challengeId": {
            "type": "integer",
            "format": "int64"
          },
          "instrumentKey": {
            "type": "string"
          },
          "actualTicker": {
            "type": "string"
          },
          "hiddenName": {
            "type": "string"
          },
          "actualName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "STOCK",
              "ETF",
              "BOND",
              "COMMODITY",
              "CRYPTO",
              "INDEX"
            ]
          }
        }
      },
      "VaRCalculationRequest": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "HISTORICAL_SIMULATION",
              "PARAMETRIC",
              "MONTE_CARLO",
              "FILTERED_HISTORICAL",
              "EXTREME_VALUE_THEORY"
            ]
          },
          "confidenceLevel": {
            "type": "number"
          },
          "holdingPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "historicalPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "numberOfSimulations": {
            "type": "integer",
            "format": "int32"
          },
          "volatilityModel": {
            "type": "string",
            "enum": [
              "HISTORICAL",
              "GARCH",
              "EWMA",
              "IMPLIED"
            ]
          },
          "correlationModel": {
            "type": "string",
            "enum": [
              "HISTORICAL",
              "DCC_GARCH",
              "EWMA_CORRELATION",
              "FACTOR_MODEL"
            ]
          },
          "distributionAssumption": {
            "type": "string",
            "enum": [
              "NORMAL",
              "T_DISTRIBUTION",
              "EMPIRICAL",
              "MIXTURE_MODEL"
            ]
          }
        },
        "required": [
          "confidenceLevel",
          "holdingPeriod",
          "method"
        ]
      },
      "VaRCalculationResponse": {
        "type": "object",
        "properties": {
          "calculationId": {
            "type": "string"
          },
          "portfolioId": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "confidenceLevel": {
            "type": "string"
          },
          "varValue": {
            "type": "string"
          },
          "varPercentage": {
            "type": "string"
          },
          "expectedShortfall": {
            "type": "string"
          },
          "calculationTime": {
            "type": "string"
          },
          "riskLevel": {
            "type": "string"
          },
          "qualityScore": {
            "type": "string"
          },
          "valid": {
            "type": "boolean"
          }
        }
      },
      "StressTestRequest": {
        "type": "object",
        "properties": {
          "testType": {
            "type": "string",
            "enum": [
              "REGULATORY",
              "HISTORICAL",
              "HYPOTHETICAL",
              "TAIL_RISK",
              "CONCENTRATION",
              "LIQUIDITY",
              "CORRELATION",
              "OPERATIONAL",
              "CREDIT",
              "MARKET",
              "INTEREST_RATE",
              "CURRENCY",
              "REVERSE"
            ]
          },
          "scenarioParameters": {
            "type": "object",
            "additionalProperties": {}
          },
          "shockSize": {
            "type": "number"
          },
          "timeHorizon": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "testType"
        ]
      },
      "StressTestResponse": {
        "type": "object",
        "properties": {
          "testId": {
            "type": "string"
          },
          "portfolioId": {
            "type": "string"
          },
          "testType": {
            "type": "string",
            "enum": [
              "REGULATORY",
              "HISTORICAL",
              "HYPOTHETICAL",
              "TAIL_RISK",
              "CONCENTRATION",
              "LIQUIDITY",
              "CORRELATION",
              "OPERATIONAL",
              "CREDIT",
              "MARKET",
              "INTEREST_RATE",
              "CURRENCY",
              "REVERSE"
            ]
          },
          "status": {
            "type": "string"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "results": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          }
        }
      },
      "ResendNotificationRequest": {
        "type": "object",
        "properties": {
          "channels": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "EMAIL",
                "SMS",
                "SLACK",
                "TEAMS",
                "WEBHOOK",
                "IN_APP",
                "MOBILE_PUSH",
                "DASHBOARD"
              ]
            }
          },
          "customMessage": {
            "type": "string"
          }
        },
        "required": [
          "channels"
        ]
      },
      "NotificationResponse": {
        "type": "object",
        "properties": {
          "notificationId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "sentAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "BatchSignalRequest": {
        "type": "object",
        "properties": {
          "symbols": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "maxItems": 50,
            "minItems": 1
          }
        }
      },
      "BatchSignalResponse": {
        "type": "object",
        "properties": {
          "signals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingSignalResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MarketConditionResponse": {
        "type": "object",
        "properties": {
          "regime": {
            "type": "string"
          },
          "volatility": {
            "type": "string"
          },
          "liquidity": {
            "type": "string"
          },
          "marketSentiment": {
            "type": "string"
          },
          "vixLevel": {
            "type": "string"
          }
        }
      },
      "SignalReasonResponse": {
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string"
          },
          "importance": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "TradingSignalResponse": {
        "type": "object",
        "properties": {
          "signalId": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "signalType": {
            "type": "string"
          },
          "strength": {
            "type": "string"
          },
          "confidence": {
            "type": "string"
          },
          "expectedReturn": {
            "type": "string"
          },
          "expectedRisk": {
            "type": "string"
          },
          "timeHorizon": {
            "type": "integer",
            "format": "int32"
          },
          "targetPrice": {
            "type": "string"
          },
          "stopLossPrice": {
            "type": "string"
          },
          "generatedAt": {
            "type": "string"
          },
          "expiresAt": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "topReasons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SignalReasonResponse"
            }
          },
          "marketCondition": {
            "$ref": "#/components/schemas/MarketConditionResponse"
          }
        }
      },
      "FilterSignalsRequest": {
        "type": "object",
        "properties": {
          "symbols": {
            "type": "array",
            "items": {
              "type": "string",
              "minLength": 1
            },
            "maxItems": 100,
            "minItems": 1
          },
          "marketRegime": {
            "type": "string",
            "enum": [
              "BULL_MARKET",
              "BEAR_MARKET",
              "SIDEWAYS_MARKET",
              "HIGH_VOLATILITY",
              "LOW_VOLATILITY"
            ]
          }
        }
      },
      "FilteredSignalResponse": {
        "type": "object",
        "properties": {
          "filteredSignals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingSignalResponse"
            }
          },
          "totalOriginalCount": {
            "type": "integer",
            "format": "int32"
          },
          "filteredCount": {
            "type": "integer",
            "format": "int32"
          },
          "marketRegime": {
            "type": "string",
            "enum": [
              "BULL_MARKET",
              "BEAR_MARKET",
              "SIDEWAYS_MARKET",
              "HIGH_VOLATILITY",
              "LOW_VOLATILITY"
            ]
          }
        }
      },
      "OptimizationRequest": {
        "type": "object",
        "properties": {
          "optimizationType": {
            "type": "string",
            "enum": [
              "MODERN_PORTFOLIO_THEORY",
              "RISK_PARITY",
              "BLACK_LITTERMAN",
              "MINIMUM_VARIANCE",
              "MAXIMUM_SHARPE",
              "HIERARCHICAL_RISK_PARITY",
              "MACHINE_LEARNING_BASED"
            ]
          },
          "objective": {
            "type": "string",
            "enum": [
              "MAXIMIZE_RETURN",
              "MINIMIZE_RISK",
              "MAXIMIZE_SHARPE_RATIO",
              "MINIMIZE_DRAWDOWN",
              "EQUAL_RISK_CONTRIBUTION",
              "TARGET_VOLATILITY",
              "ESG_OPTIMIZED"
            ]
          },
          "maxWeight": {
            "type": "number"
          },
          "minWeight": {
            "type": "number"
          },
          "targetVolatility": {
            "type": "number"
          }
        },
        "required": [
          "objective",
          "optimizationType"
        ]
      },
      "AssetAllocationResponse": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "assetName": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "recommendedWeight": {
            "type": "string"
          },
          "currentWeight": {
            "type": "string"
          },
          "expectedReturn": {
            "type": "string"
          },
          "expectedVolatility": {
            "type": "string"
          },
          "riskContribution": {
            "type": "string"
          },
          "allocationConfidence": {
            "type": "string"
          }
        }
      },
      "ExpectedPerformanceResponse": {
        "type": "object",
        "properties": {
          "expectedReturn": {
            "type": "string"
          },
          "expectedVolatility": {
            "type": "string"
          },
          "expectedSharpeRatio": {
            "type": "string"
          },
          "expectedMaxDrawdown": {
            "type": "string"
          },
          "beta": {
            "type": "string"
          },
          "trackingError": {
            "type": "string"
          }
        }
      },
      "PortfolioOptimizationResponse": {
        "type": "object",
        "properties": {
          "optimizationId": {
            "type": "string"
          },
          "portfolioId": {
            "type": "integer",
            "format": "int64"
          },
          "optimizationType": {
            "type": "string"
          },
          "objective": {
            "type": "string"
          },
          "recommendedAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetAllocationResponse"
            }
          },
          "currentAllocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetAllocationResponse"
            }
          },
          "rebalancingActions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RebalancingActionResponse"
            }
          },
          "expectedPerformance": {
            "$ref": "#/components/schemas/ExpectedPerformanceResponse"
          },
          "riskMetrics": {
            "$ref": "#/components/schemas/RiskMetricsResponse"
          },
          "generatedAt": {
            "type": "string"
          },
          "nextRebalancingDate": {
            "type": "string"
          },
          "confidence": {
            "type": "string"
          }
        }
      },
      "RebalancingActionResponse": {
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "recommendedExecutionTime": {
            "type": "string"
          },
          "estimatedCost": {
            "type": "string"
          },
          "marketImpact": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "RiskMetricsResponse": {
        "type": "object",
        "properties": {
          "var95": {
            "type": "string"
          },
          "cvar95": {
            "type": "string"
          },
          "diversificationRatio": {
            "type": "string"
          },
          "concentrationRisk": {
            "type": "string"
          },
          "liquidityRisk": {
            "type": "string"
          }
        }
      },
      "EfficientFrontierRequest": {
        "type": "object",
        "properties": {
          "points": {
            "type": "integer",
            "format": "int32"
          },
          "riskLevels": {
            "type": "array",
            "items": {
              "type": "number"
            }
          },
          "maxWeight": {
            "type": "number"
          },
          "minWeight": {
            "type": "number"
          }
        }
      },
      "EfficientFrontierResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "integer",
            "format": "int64"
          },
          "frontierPoints": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FrontierPoint"
            }
          }
        }
      },
      "FrontierPoint": {
        "type": "object",
        "properties": {
          "risk": {
            "type": "number"
          },
          "return_": {
            "type": "number"
          },
          "sharpeRatio": {
            "type": "number"
          }
        }
      },
      "BacktestRequest": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "optimizationType": {
            "type": "string",
            "enum": [
              "MODERN_PORTFOLIO_THEORY",
              "RISK_PARITY",
              "BLACK_LITTERMAN",
              "MINIMUM_VARIANCE",
              "MAXIMUM_SHARPE",
              "HIERARCHICAL_RISK_PARITY",
              "MACHINE_LEARNING_BASED"
            ]
          },
          "objective": {
            "type": "string",
            "enum": [
              "MAXIMIZE_RETURN",
              "MINIMIZE_RISK",
              "MAXIMIZE_SHARPE_RATIO",
              "MINIMIZE_DRAWDOWN",
              "EQUAL_RISK_CONTRIBUTION",
              "TARGET_VOLATILITY",
              "ESG_OPTIMIZED"
            ]
          }
        },
        "required": [
          "endDate",
          "startDate"
        ]
      },
      "BacktestResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalReturn": {
            "type": "number"
          },
          "volatility": {
            "type": "number"
          },
          "sharpeRatio": {
            "type": "number"
          },
          "maxDrawdown": {
            "type": "number"
          },
          "performanceData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PerformancePoint"
            }
          }
        }
      },
      "PerformancePoint": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "portfolioValue": {
            "type": "number"
          },
          "benchmarkValue": {
            "type": "number"
          },
          "cumulativeReturn": {
            "type": "number"
          }
        }
      },
      "DCASimulationRequest": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string",
            "minLength": 1
          },
          "monthlyInvestmentAmount": {
            "type": "number",
            "minimum": 0.0
          },
          "startDate": {
            "type": "string",
            "minLength": 1
          },
          "endDate": {
            "type": "string",
            "minLength": 1
          },
          "frequency": {
            "type": "string",
            "minLength": 1,
            "pattern": "DAILY|WEEKLY|MONTHLY"
          }
        },
        "required": [
          "endDate",
          "frequency",
          "monthlyInvestmentAmount",
          "startDate",
          "symbol"
        ]
      },
      "CompanySyncResult": {
        "type": "object",
        "properties": {
          "symbol": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          },
          "updatedMarketCap": {
            "type": "integer",
            "format": "int64"
          },
          "errorMessage": {
            "type": "string"
          },
          "syncedAt": {
            "type": "string",
            "format": "date-time"
          },
          "previousMarketCap": {
            "type": "integer",
            "format": "int64"
          },
          "changePercentage": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CompanySyncBatchResult": {
        "type": "object",
        "properties": {
          "totalCompanies": {
            "type": "integer",
            "format": "int32"
          },
          "successCount": {
            "type": "integer",
            "format": "int32"
          },
          "failureCount": {
            "type": "integer",
            "format": "int32"
          },
          "syncResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySyncResult"
            }
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "elapsedTimeMillis": {
            "type": "integer",
            "format": "int64"
          },
          "successRate": {
            "type": "number",
            "format": "double"
          },
          "fullSuccess": {
            "type": "boolean"
          }
        }
      },
      "CompanySearchRequest": {
        "type": "object",
        "description": "Search parameters",
        "properties": {
          "query": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sector": {
            "type": "string"
          },
          "minMarketCap": {
            "type": "integer",
            "format": "int64"
          },
          "maxMarketCap": {
            "type": "integer",
            "format": "int64"
          },
          "minPopularityScore": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          },
          "sortBy": {
            "type": "string"
          },
          "sortDirection": {
            "type": "string"
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "maximum": 100,
            "minimum": 1
          },
          "offset": {
            "type": "integer",
            "format": "int32",
            "minimum": 0
          }
        }
      },
      "CompanyResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "symbol": {
            "type": "string"
          },
          "nameKr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          },
          "sector": {
            "type": "string"
          },
          "marketCap": {
            "type": "integer",
            "format": "int64"
          },
          "marketCapDisplay": {
            "type": "string"
          },
          "logoPath": {
            "type": "string"
          },
          "descriptionKr": {
            "type": "string"
          },
          "descriptionEn": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "isActive": {
            "type": "boolean"
          },
          "popularityScore": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "CompanySearchResponse": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanyResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int64"
          },
          "limit": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int32"
          },
          "hasMore": {
            "type": "boolean"
          },
          "currentPage": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "searchQuery": {
            "type": "string"
          },
          "appliedCategories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BacktestComparisonRequest": {
        "type": "object",
        "properties": {
          "backtestIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BacktestComparisonResult": {
        "type": "object",
        "properties": {
          "backtestIds": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "totalReturns": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "sharpeRatios": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "maxDrawdowns": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "winRates": {
            "type": "object",
            "additionalProperties": {
              "type": "number"
            }
          },
          "bestPerformer": {
            "type": "string"
          },
          "recommendation": {
            "type": "string"
          }
        }
      },
      "PlaceOrderRequest": {
        "type": "object",
        "description": "주문 실행 요청",
        "properties": {
          "instrumentKey": {
            "type": "string",
            "description": "상품 키 (AAPL, MSFT 등)",
            "example": "AAPL"
          },
          "side": {
            "type": "string",
            "description": "주문 구분 (매수/매도)",
            "enum": [
              "BUY",
              "SELL"
            ],
            "example": "BUY"
          },
          "quantity": {
            "type": "number",
            "description": "주문 수량",
            "example": 10,
            "maximum": 999999999,
            "minimum": 0.000001
          },
          "orderType": {
            "type": "string",
            "description": "주문 유형 (시장가/지정가)",
            "enum": [
              "MARKET",
              "LIMIT"
            ],
            "example": "MARKET"
          },
          "limitPrice": {
            "type": "number",
            "description": "지정가 (지정가 주문 시에만 필요)",
            "example": 150.0,
            "maximum": 999999999,
            "minimum": 0.01
          }
        },
        "required": [
          "instrumentKey",
          "orderType",
          "quantity",
          "side"
        ]
      },
      "PlaceOrderResponse": {
        "type": "object",
        "description": "주문 실행 응답",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64",
            "description": "주문 ID",
            "example": 123
          },
          "instrumentKey": {
            "type": "string",
            "description": "상품 키",
            "example": "AAPL"
          },
          "side": {
            "type": "string",
            "description": "매수/매도 구분",
            "enum": [
              "BUY",
              "SELL"
            ],
            "example": "BUY"
          },
          "quantity": {
            "type": "number",
            "description": "체결 수량",
            "example": 10.0
          },
          "executedPrice": {
            "type": "number",
            "description": "체결가",
            "example": 152.5
          },
          "slippageRate": {
            "type": "number",
            "description": "슬리피지 비율 (%)",
            "example": 1.25
          },
          "status": {
            "type": "string",
            "description": "주문 상태",
            "enum": [
              "PENDING",
              "EXECUTED",
              "CANCELLED"
            ],
            "example": "EXECUTED"
          },
          "executedAt": {
            "type": "string",
            "format": "date-time",
            "description": "체결 시각"
          },
          "newBalance": {
            "type": "number",
            "description": "주문 후 잔액",
            "example": 998475.0
          },
          "message": {
            "type": "string",
            "description": "처리 메시지",
            "example": "주문이 성공적으로 체결되었습니다."
          }
        }
      },
      "CloseChallengeResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "finalBalance": {
            "type": "number"
          },
          "totalPnL": {
            "type": "number"
          },
          "returnPercentage": {
            "type": "number"
          },
          "rank": {
            "type": "integer",
            "format": "int32"
          },
          "revealedInstruments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RevealedInstrument"
            }
          },
          "message": {
            "type": "string"
          }
        }
      },
      "RevealedInstrument": {
        "type": "object",
        "properties": {
          "instrumentKey": {
            "type": "string"
          },
          "realSymbol": {
            "type": "string"
          },
          "realName": {
            "type": "string"
          }
        }
      },
      "StartChallengeResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "challengeId": {
            "type": "integer",
            "format": "int64"
          },
          "challengeTitle": {
            "type": "string"
          },
          "seedBalance": {
            "type": "number"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "CreatePostRequest": {
        "type": "object",
        "description": "게시글 작성 요청",
        "properties": {
          "content": {
            "type": "string",
            "description": "게시글 내용",
            "example": "이번 챌린지에서 테슬라 주식에 투자해봤습니다!",
            "maxLength": 2000,
            "minLength": 0
          }
        },
        "required": [
          "content"
        ]
      },
      "PostResponse": {
        "type": "object",
        "description": "게시글 정보",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "게시글 ID"
          },
          "challengeId": {
            "type": "integer",
            "format": "int64",
            "description": "챌린지 ID"
          },
          "authorId": {
            "type": "integer",
            "format": "int64",
            "description": "작성자 ID"
          },
          "content": {
            "type": "string",
            "description": "게시글 내용"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "작성일시"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "수정일시"
          }
        }
      },
      "CreateCommentRequest": {
        "type": "object",
        "description": "댓글 작성 요청",
        "properties": {
          "content": {
            "type": "string",
            "description": "댓글 내용",
            "example": "좋은 전략이네요!",
            "maxLength": 1000,
            "minLength": 0
          }
        },
        "required": [
          "content"
        ]
      },
      "CommentResponse": {
        "type": "object",
        "description": "댓글 정보",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "댓글 ID"
          },
          "postId": {
            "type": "integer",
            "format": "int64",
            "description": "게시글 ID"
          },
          "authorId": {
            "type": "integer",
            "format": "int64",
            "description": "작성자 ID"
          },
          "content": {
            "type": "string",
            "description": "댓글 내용"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "작성일시"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "수정일시"
          }
        }
      },
      "LeaderboardResponse": {
        "type": "object",
        "description": "리더보드 엔트리",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "엔트리 ID"
          },
          "challengeId": {
            "type": "integer",
            "format": "int64",
            "description": "챌린지 ID"
          },
          "sessionId": {
            "type": "integer",
            "format": "int64",
            "description": "세션 ID"
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "description": "사용자 ID"
          },
          "pnl": {
            "type": "number",
            "description": "손익 (원)",
            "example": 150000
          },
          "returnPercentage": {
            "type": "number",
            "description": "수익률 (%)",
            "example": 15.25
          },
          "rankPosition": {
            "type": "integer",
            "format": "int32",
            "description": "순위",
            "example": 1
          },
          "calculatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "계산일시"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "에러 응답",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "에러 발생 시각"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP 상태 코드",
            "example": 400
          },
          "error": {
            "type": "string",
            "description": "에러 타입",
            "example": "Validation Failed"
          },
          "message": {
            "type": "string",
            "description": "에러 메시지",
            "example": "잘못된 요청입니다"
          },
          "path": {
            "type": "string",
            "description": "요청 경로",
            "example": "/api/auth/login"
          },
          "traceId": {
            "type": "string",
            "description": "추적 ID"
          },
          "validationErrors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "유효성 검사 에러 상세 정보"
          }
        }
      },
      "SignupRequest": {
        "type": "object",
        "description": "회원가입 요청",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "사용자 이메일",
            "example": "user@example.com",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "description": "비밀번호 (최소 8자, 대소문자/숫자/특수문자 중 3가지 이상)",
            "example": "Password123!",
            "minLength": 1
          },
          "nickname": {
            "type": "string",
            "description": "사용자 닉네임 (한글, 영문, 숫자만 허용)",
            "example": "투자왕",
            "maxLength": 20,
            "minLength": 2,
            "pattern": "^[가-힣a-zA-Z0-9]+$"
          }
        },
        "required": [
          "email",
          "nickname",
          "password"
        ]
      },
      "AuthResponse": {
        "type": "object",
        "description": "인증 응답",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "JWT 인증 토큰"
          },
          "refreshToken": {
            "type": "string",
            "description": "리프레시 토큰"
          },
          "tokenType": {
            "type": "string",
            "description": "토큰 타입",
            "example": "Bearer"
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "액세스 토큰 만료 시간"
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "format": "date-time",
            "description": "리프레시 토큰 만료 시간"
          },
          "expiresIn": {
            "type": "integer",
            "format": "int64",
            "description": "액세스 토큰 만료까지 남은 초"
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "description": "사용자 ID"
          },
          "email": {
            "type": "string",
            "description": "사용자 이메일"
          },
          "nickname": {
            "type": "string",
            "description": "사용자 닉네임"
          },
          "redirectUrl": {
            "type": "string",
            "description": "로그인 후 리다이렉트 URL"
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "description": "리프레시 토큰 요청",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "리프레시 토큰",
            "minLength": 1
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "LogoutRequest": {
        "type": "object",
        "description": "로그아웃 요청",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "리프레시 토큰 (제공시 해당 토큰만 폐기, 미제공시 모든 토큰 폐기)"
          },
          "logoutFromAllDevices": {
            "type": "boolean",
            "default": false,
            "description": "모든 디바이스에서 로그아웃 여부"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "description": "로그인 요청",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "사용자 이메일",
            "example": "user@example.com",
            "minLength": 1
          },
          "password": {
            "type": "string",
            "description": "비밀번호",
            "minLength": 1
          },
          "redirectUrl": {
            "type": "string",
            "description": "로그인 성공 후 리다이렉트할 URL (선택사항)",
            "example": "/dashboard"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "CreateChallengeCommand": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "challengeType": {
            "type": "string",
            "enum": [
              "MARKET_CRASH",
              "BULL_MARKET",
              "SECTOR_ROTATION",
              "VOLATILITY",
              "ESG",
              "INTERNATIONAL",
              "OPTIONS",
              "RISK_MANAGEMENT",
              "TOURNAMENT",
              "EDUCATIONAL",
              "COMMUNITY"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "durationDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "availableInstruments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tradingRestrictions": {
            "type": "object",
            "additionalProperties": {}
          },
          "successCriteria": {
            "type": "object",
            "additionalProperties": {}
          },
          "entryRequirements": {
            "type": "object",
            "additionalProperties": {}
          },
          "learningObjectives": {
            "type": "string"
          },
          "marketScenarioDescription": {
            "type": "string"
          },
          "riskLevel": {
            "type": "integer",
            "format": "int32"
          },
          "estimatedTimeMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "CreateFromTemplateCommand": {
        "type": "object",
        "properties": {
          "templateId": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "challengeType": {
            "type": "string",
            "enum": [
              "MARKET_CRASH",
              "BULL_MARKET",
              "SECTOR_ROTATION",
              "VOLATILITY",
              "ESG",
              "INTERNATIONAL",
              "OPTIONS",
              "RISK_MANAGEMENT",
              "TOURNAMENT",
              "EDUCATIONAL",
              "COMMUNITY"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "durationDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "AlertStatusUpdateRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "ACKNOWLEDGED",
              "RESOLVED",
              "EXPIRED",
              "SUPPRESSED",
              "ESCALATED"
            ]
          },
          "comment": {
            "type": "string"
          }
        },
        "required": [
          "status"
        ]
      },
      "RiskAlertResponse": {
        "type": "object",
        "properties": {
          "alertId": {
            "type": "string"
          },
          "portfolioId": {
            "type": "string"
          },
          "alertType": {
            "type": "string"
          },
          "severity": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "triggerTime": {
            "type": "string"
          },
          "acknowledgedAt": {
            "type": "string"
          },
          "resolvedAt": {
            "type": "string"
          },
          "recommendedActions": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageVaRCalculationResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VaRCalculationResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "unpaged": {
            "type": "boolean"
          },
          "paged": {
            "type": "boolean"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "empty": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          },
          "sorted": {
            "type": "boolean"
          }
        }
      },
      "PortfolioRiskSummary": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "string"
          },
          "portfolioName": {
            "type": "string"
          },
          "currentVaR": {
            "type": "number"
          },
          "varLimit": {
            "type": "number"
          },
          "utilizationRate": {
            "type": "number"
          },
          "riskLevel": {
            "type": "string"
          },
          "lastCalculation": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "RiskDashboardResponse": {
        "type": "object",
        "properties": {
          "totalPortfolios": {
            "type": "integer",
            "format": "int32"
          },
          "activeAlerts": {
            "type": "integer",
            "format": "int32"
          },
          "totalVaRCalculations": {
            "type": "integer",
            "format": "int32"
          },
          "averageVaR": {
            "type": "number"
          },
          "riskTrend": {
            "type": "string"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "portfolioRiskSummary": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioRiskSummary"
            }
          },
          "recentAlerts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RiskAlertResponse"
            }
          },
          "systemStatus": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "PageRiskAlertResponse": {
        "type": "object",
        "properties": {
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RiskAlertResponse"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "ActiveSignalsResponse": {
        "type": "object",
        "properties": {
          "activeSignals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradingSignalResponse"
            }
          },
          "count": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RebalancingSuggestionsResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "integer",
            "format": "int64"
          },
          "suggestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RebalancingActionResponse"
            }
          },
          "totalSuggestions": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OptimizationHistoryResponse": {
        "type": "object",
        "properties": {
          "portfolioId": {
            "type": "integer",
            "format": "int64"
          },
          "optimizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioOptimizationResponse"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SyncStatusResponse": {
        "type": "object",
        "properties": {
          "lastSyncTime": {
            "type": "string"
          },
          "nextScheduledSync": {
            "type": "string"
          },
          "totalCompanies": {
            "type": "integer",
            "format": "int32"
          },
          "lastSyncSuccessCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastSyncFailureCount": {
            "type": "integer",
            "format": "int32"
          },
          "isCurrentlyRunning": {
            "type": "boolean"
          }
        }
      },
      "CompanyCategoryResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "categoryId": {
            "type": "string"
          },
          "nameKr": {
            "type": "string"
          },
          "nameEn": {
            "type": "string"
          },
          "descriptionKr": {
            "type": "string"
          },
          "descriptionEn": {
            "type": "string"
          },
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "isActive": {
            "type": "boolean"
          },
          "companyCount": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "BacktestParameters": {
        "type": "object",
        "properties": {
          "backtestName": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "symbols": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "initialCapital": {
            "type": "number"
          },
          "benchmarkSymbol": {
            "type": "string"
          },
          "strategy": {
            "$ref": "#/components/schemas/TradingStrategy"
          },
          "mlConfig": {
            "$ref": "#/components/schemas/MLModelConfig"
          },
          "riskConfig": {
            "$ref": "#/components/schemas/RiskManagementConfig"
          },
          "costs": {
            "$ref": "#/components/schemas/TradingCosts"
          },
          "positionConfig": {
            "$ref": "#/components/schemas/PositionManagement"
          },
          "dataConfig": {
            "$ref": "#/components/schemas/DataConfig"
          },
          "performanceConfig": {
            "$ref": "#/components/schemas/PerformanceAnalysisConfig"
          },
          "metadata": {
            "type": "object",
            "additionalProperties": {}
          }
        }
      },
      "BacktestResult": {
        "type": "object",
        "properties": {
          "backtestId": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "initialCapital": {
            "type": "number"
          },
          "finalValue": {
            "type": "number"
          },
          "totalReturn": {
            "type": "number"
          },
          "annualizedReturn": {
            "type": "number"
          },
          "volatility": {
            "type": "number"
          },
          "sharpeRatio": {
            "type": "number"
          },
          "maxDrawdown": {
            "type": "number"
          },
          "winRate": {
            "type": "number"
          },
          "averageWin": {
            "type": "number"
          },
          "averageLoss": {
            "type": "number"
          },
          "profitLossRatio": {
            "type": "number"
          },
          "totalTrades": {
            "type": "integer",
            "format": "int32"
          },
          "winningTrades": {
            "type": "integer",
            "format": "int32"
          },
          "losingTrades": {
            "type": "integer",
            "format": "int32"
          },
          "calmarRatio": {
            "type": "number"
          },
          "sortinoRatio": {
            "type": "number"
          },
          "beta": {
            "type": "number"
          },
          "alpha": {
            "type": "number"
          },
          "informationRatio": {
            "type": "number"
          },
          "treynorRatio": {
            "type": "number"
          },
          "trades": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TradeRecord"
            }
          },
          "dailyReturns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DailyReturn"
            }
          },
          "detailedMetrics": {
            "type": "object",
            "additionalProperties": {}
          },
          "parameters": {
            "$ref": "#/components/schemas/BacktestParameters"
          },
          "riskMetrics": {
            "$ref": "#/components/schemas/RiskMetrics"
          },
          "benchmarkComparison": {
            "$ref": "#/components/schemas/BenchmarkComparison"
          },
          "executionTime": {
            "type": "string",
            "format": "date-time"
          },
          "executionDuration": {
            "type": "integer",
            "format": "int64"
          },
          "mlPerformance": {
            "$ref": "#/components/schemas/MLModelPerformance"
          }
        }
      },
      "BacktestStatusResponse": {
        "type": "object",
        "properties": {
          "backtestId": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "result": {
            "$ref": "#/components/schemas/BacktestResult"
          }
        }
      },
      "BenchmarkComparison": {
        "type": "object",
        "properties": {
          "benchmarkSymbol": {
            "type": "string"
          },
          "benchmarkReturn": {
            "type": "number"
          },
          "excessReturn": {
            "type": "number"
          },
          "trackingError": {
            "type": "number"
          },
          "beta": {
            "type": "number"
          },
          "alpha": {
            "type": "number"
          },
          "correlationCoefficient": {
            "type": "number"
          }
        }
      },
      "ConfidenceBucket": {
        "type": "object",
        "properties": {
          "confidenceMin": {
            "type": "number"
          },
          "confidenceMax": {
            "type": "number"
          },
          "tradeCount": {
            "type": "integer",
            "format": "int32"
          },
          "winRate": {
            "type": "number"
          },
          "averagePnL": {
            "type": "number"
          }
        }
      },
      "DailyReturn": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "portfolioValue": {
            "type": "number"
          },
          "dailyReturn": {
            "type": "number"
          },
          "cumulativeReturn": {
            "type": "number"
          },
          "drawdown": {
            "type": "number"
          }
        }
      },
      "DataConfig": {
        "type": "object",
        "properties": {
          "dataFrequency": {
            "type": "string"
          },
          "adjustForSplits": {
            "type": "boolean"
          },
          "adjustForDividends": {
            "type": "boolean"
          },
          "includeAfterHours": {
            "type": "boolean"
          },
          "dataProvider": {
            "type": "string"
          },
          "enableDataValidation": {
            "type": "boolean"
          },
          "maxMissingDataPercent": {
            "type": "integer",
            "format": "int32"
          },
          "missingDataStrategy": {
            "type": "string"
          },
          "enableOutlierDetection": {
            "type": "boolean"
          },
          "outlierThreshold": {
            "type": "number"
          }
        }
      },
      "MLModelConfig": {
        "type": "object",
        "properties": {
          "modelType": {
            "type": "string"
          },
          "trainingPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "retrainingFrequency": {
            "type": "integer",
            "format": "int32"
          },
          "confidenceThreshold": {
            "type": "number"
          },
          "useEnsemble": {
            "type": "boolean"
          },
          "features": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "hyperparameters": {
            "type": "object",
            "additionalProperties": {}
          },
          "enableContinuousLearning": {
            "type": "boolean"
          },
          "learningRate": {
            "type": "number"
          }
        }
      },
      "MLModelPerformance": {
        "type": "object",
        "properties": {
          "signalAccuracy": {
            "type": "number"
          },
          "precisionScore": {
            "type": "number"
          },
          "recallScore": {
            "type": "number"
          },
          "f1Score": {
            "type": "number"
          },
          "truePositives": {
            "type": "integer",
            "format": "int32"
          },
          "trueNegatives": {
            "type": "integer",
            "format": "int32"
          },
          "falsePositives": {
            "type": "integer",
            "format": "int32"
          },
          "falseNegatives": {
            "type": "integer",
            "format": "int32"
          },
          "confidenceCorrelation": {
            "type": "number"
          },
          "confidenceBuckets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConfidenceBucket"
            }
          }
        }
      },
      "PerformanceAnalysisConfig": {
        "type": "object",
        "properties": {
          "calculateDetailedMetrics": {
            "type": "boolean"
          },
          "generateTradeAnalysis": {
            "type": "boolean"
          },
          "enableRiskAnalysis": {
            "type": "boolean"
          },
          "performBenchmarkComparison": {
            "type": "boolean"
          },
          "generateReports": {
            "type": "boolean"
          },
          "reportFormat": {
            "type": "string"
          },
          "enableVisualization": {
            "type": "boolean"
          },
          "customMetrics": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rollingWindowDays": {
            "type": "integer",
            "format": "int32"
          },
          "enableSectorAnalysis": {
            "type": "boolean"
          }
        }
      },
      "PositionManagement": {
        "type": "object",
        "properties": {
          "rebalancingFrequency": {
            "type": "string"
          },
          "minTradeSize": {
            "type": "number"
          },
          "maxTradeSize": {
            "type": "number"
          },
          "enablePartialFills": {
            "type": "boolean"
          },
          "orderType": {
            "type": "string"
          },
          "limitOrderTolerance": {
            "type": "number"
          },
          "orderTimeoutMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "enablePositionNetting": {
            "type": "boolean"
          },
          "cashReservePercent": {
            "type": "number"
          }
        }
      },
      "RiskManagementConfig": {
        "type": "object",
        "properties": {
          "maxPortfolioRisk": {
            "type": "number"
          },
          "maxDailyLoss": {
            "type": "number"
          },
          "var95Limit": {
            "type": "number"
          },
          "maxDrawdownLimit": {
            "type": "number"
          },
          "correlationLimit": {
            "type": "number"
          },
          "usePositionSizing": {
            "type": "boolean"
          },
          "positionSizingMethod": {
            "type": "string"
          },
          "riskFreeRate": {
            "type": "number"
          },
          "enableDynamicHedging": {
            "type": "boolean"
          },
          "volatilityTargeting": {
            "type": "number"
          }
        }
      },
      "RiskMetrics": {
        "type": "object",
        "properties": {
          "var95": {
            "type": "number"
          },
          "var99": {
            "type": "number"
          },
          "cvar95": {
            "type": "number"
          },
          "skewness": {
            "type": "number"
          },
          "kurtosis": {
            "type": "number"
          },
          "downsideDeviation": {
            "type": "number"
          },
          "maxConsecutiveLosses": {
            "type": "integer",
            "format": "int32"
          },
          "maxLossStreak": {
            "type": "number"
          }
        }
      },
      "TradeRecord": {
        "type": "object",
        "properties": {
          "entryTime": {
            "type": "string",
            "format": "date-time"
          },
          "exitTime": {
            "type": "string",
            "format": "date-time"
          },
          "action": {
            "type": "string"
          },
          "entryPrice": {
            "type": "number"
          },
          "exitPrice": {
            "type": "number"
          },
          "quantity": {
            "type": "number"
          },
          "pnl": {
            "type": "number"
          },
          "pnlPercent": {
            "type": "number"
          },
          "signal": {
            "type": "string"
          },
          "confidence": {
            "type": "number"
          }
        }
      },
      "TradingCosts": {
        "type": "object",
        "properties": {
          "commissionPerTrade": {
            "type": "number"
          },
          "commissionPercent": {
            "type": "number"
          },
          "bidAskSpread": {
            "type": "number"
          },
          "slippage": {
            "type": "number"
          },
          "borrowCost": {
            "type": "number"
          },
          "marginInterest": {
            "type": "number"
          },
          "includeMarketImpact": {
            "type": "boolean"
          },
          "marketImpactFactor": {
            "type": "number"
          }
        }
      },
      "TradingStrategy": {
        "type": "object",
        "properties": {
          "strategyType": {
            "type": "string"
          },
          "signalThreshold": {
            "type": "number"
          },
          "stopLossPercent": {
            "type": "number"
          },
          "takeProfitPercent": {
            "type": "number"
          },
          "maxHoldingPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "minHoldingPeriod": {
            "type": "integer",
            "format": "int32"
          },
          "useTrailingStop": {
            "type": "boolean"
          },
          "trailingStopPercent": {
            "type": "number"
          },
          "allowShortSelling": {
            "type": "boolean"
          },
          "maxPositionSize": {
            "type": "number"
          },
          "maxConcurrentPositions": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BacktestSummary": {
        "type": "object",
        "properties": {
          "backtestId": {
            "type": "string"
          },
          "backtestName": {
            "type": "string"
          },
          "symbol": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "totalReturn": {
            "type": "number"
          },
          "sharpeRatio": {
            "type": "number"
          },
          "maxDrawdown": {
            "type": "number"
          },
          "totalTrades": {
            "type": "integer",
            "format": "int32"
          },
          "winRate": {
            "type": "number"
          },
          "executionTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "OrderItem": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "instrumentKey": {
            "type": "string"
          },
          "side": {
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "quantity": {
            "type": "number"
          },
          "orderType": {
            "type": "string",
            "enum": [
              "MARKET",
              "LIMIT"
            ]
          },
          "limitPrice": {
            "type": "number"
          },
          "executedPrice": {
            "type": "number"
          },
          "slippageRate": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "EXECUTED",
              "CANCELLED"
            ]
          },
          "orderedAt": {
            "type": "string",
            "format": "date-time"
          },
          "executedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PortfolioItem": {
        "type": "object",
        "properties": {
          "instrumentKey": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "averagePrice": {
            "type": "number"
          },
          "totalCost": {
            "type": "number"
          },
          "currentValue": {
            "type": "number"
          },
          "unrealizedPnl": {
            "type": "number"
          }
        }
      },
      "SessionDetailResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "challengeId": {
            "type": "integer",
            "format": "int64"
          },
          "challengeTitle": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "READY",
              "ACTIVE",
              "COMPLETED",
              "CANCELLED",
              "ENDED"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "currentBalance": {
            "type": "number"
          },
          "returnRate": {
            "type": "number"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "portfolio": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioItem"
            }
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderItem"
            }
          }
        }
      },
      "PortfolioPosition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "instrumentKey": {
            "type": "string"
          },
          "quantity": {
            "type": "number"
          },
          "averagePrice": {
            "type": "number"
          },
          "totalCost": {
            "type": "number"
          }
        }
      },
      "PortfolioResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "totalValue": {
            "type": "number"
          },
          "cashBalance": {
            "type": "number"
          },
          "positions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PortfolioPosition"
            }
          }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "instrumentKey": {
            "type": "string"
          },
          "side": {
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "quantity": {
            "type": "number"
          },
          "orderType": {
            "type": "string",
            "enum": [
              "MARKET",
              "LIMIT"
            ]
          },
          "limitPrice": {
            "type": "number"
          },
          "executedPrice": {
            "type": "number"
          },
          "slippageRate": {
            "type": "number"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "EXECUTED",
              "CANCELLED"
            ]
          },
          "orderedAt": {
            "type": "string",
            "format": "date-time"
          },
          "executedAt": {
            "type": "string",
            "format": "date-time"
          },
          "totalValue": {
            "type": "number"
          }
        }
      },
      "OrdersResponse": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Order"
            }
          }
        }
      },
      "DashboardData": {
        "type": "object",
        "properties": {
          "userStats": {
            "$ref": "#/components/schemas/UserStats"
          },
          "recentSessions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecentSession"
            }
          }
        }
      },
      "RecentSession": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "challengeId": {
            "type": "integer",
            "format": "int32"
          },
          "challengeTitle": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "currentBalance": {
            "type": "number",
            "format": "double"
          },
          "returnRate": {
            "type": "number",
            "format": "double"
          },
          "startedAt": {
            "type": "string"
          },
          "completedAt": {
            "type": "string"
          }
        }
      },
      "UserStats": {
        "type": "object",
        "properties": {
          "totalSessions": {
            "type": "integer",
            "format": "int32"
          },
          "activeSessions": {
            "type": "integer",
            "format": "int32"
          },
          "completedSessions": {
            "type": "integer",
            "format": "int32"
          },
          "averageReturn": {
            "type": "number",
            "format": "double"
          },
          "bestReturn": {
            "type": "number",
            "format": "double"
          },
          "worstReturn": {
            "type": "number",
            "format": "double"
          },
          "totalReturn": {
            "type": "number",
            "format": "double"
          },
          "winRate": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ChallengeItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SCHEDULED",
              "ACTIVE",
              "COMPLETED",
              "ARCHIVED",
              "CANCELLED"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "durationDays": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChallengeListResponse": {
        "type": "object",
        "properties": {
          "challenges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChallengeItem"
            }
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChallengeDetailResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SCHEDULED",
              "ACTIVE",
              "COMPLETED",
              "ARCHIVED",
              "CANCELLED"
            ]
          },
          "initialBalance": {
            "type": "number"
          },
          "durationDays": {
            "type": "integer",
            "format": "int32"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "instruments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userSession": {
            "$ref": "#/components/schemas/UserSession"
          }
        }
      },
      "UserSession": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "READY",
              "ACTIVE",
              "COMPLETED",
              "CANCELLED",
              "ENDED"
            ]
          },
          "currentBalance": {
            "type": "number"
          },
          "returnRate": {
            "type": "number"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChallengeInstrumentsResponse": {
        "type": "object",
        "description": "챌린지 상품 목록 응답",
        "properties": {
          "challengeId": {
            "type": "integer",
            "format": "int64",
            "description": "챌린지 ID",
            "example": 1
          },
          "instruments": {
            "type": "array",
            "description": "상품 목록",
            "items": {
              "$ref": "#/components/schemas/InstrumentInfo"
            }
          }
        }
      },
      "InstrumentInfo": {
        "type": "object",
        "description": "챌린지 상품 정보",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "상품 ID",
            "example": 1
          },
          "instrumentKey": {
            "type": "string",
            "description": "상품 키 (A, B, C 등)",
            "example": "A"
          },
          "actualTicker": {
            "type": "string",
            "description": "실제 티커",
            "example": "AAPL"
          },
          "hiddenName": {
            "type": "string",
            "description": "숨겨진 표시명",
            "example": "회사 A"
          },
          "actualName": {
            "type": "string",
            "description": "실제 회사명",
            "example": "Apple Inc."
          },
          "type": {
            "type": "string",
            "description": "상품 유형"
          }
        }
      },
      "SessionStatusInfo": {
        "type": "object",
        "properties": {
          "sessionId": {
            "type": "integer",
            "format": "int64"
          },
          "challengeId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "string",
            "enum": [
              "READY",
              "ACTIVE",
              "COMPLETED",
              "CANCELLED",
              "ENDED"
            ]
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ChallengeSearchCriteria": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "templateId": {
            "type": "integer",
            "format": "int64"
          },
          "difficulty": {
            "type": "string",
            "enum": [
              "BEGINNER",
              "INTERMEDIATE",
              "ADVANCED",
              "EXPERT"
            ]
          },
          "challengeType": {
            "type": "string",
            "enum": [
              "MARKET_CRASH",
              "BULL_MARKET",
              "SECTOR_ROTATION",
              "VOLATILITY",
              "ESG",
              "INTERNATIONAL",
              "OPTIONS",
              "RISK_MANAGEMENT",
              "TOURNAMENT",
              "EDUCATIONAL",
              "COMMUNITY"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "SCHEDULED",
              "ACTIVE",
              "COMPLETED",
              "ARCHIVED",
              "CANCELLED"
            ]
          },
          "createdBy": {
            "type": "integer",
            "format": "int64"
          },
          "featured": {
            "type": "boolean"
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minRiskLevel": {
            "type": "integer",
            "format": "int32"
          },
          "maxRiskLevel": {
            "type": "integer",
            "format": "int32"
          },
          "minDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "maxDurationDays": {
            "type": "integer",
            "format": "int32"
          },
          "minAverageRating": {
            "type": "number"
          },
          "minParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "maxParticipants": {
            "type": "integer",
            "format": "int32"
          },
          "sortBy": {
            "type": "string"
          },
          "sortDirection": {
            "type": "string"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "ChallengePage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Challenge"
            }
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "hasNext": {
            "type": "boolean"
          },
          "hasPrevious": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT 토큰을 입력하세요. 'Bearer ' 접두사는 자동으로 추가됩니다.",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
