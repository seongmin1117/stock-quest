plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '11.13.0'
    id 'com.github.spotbugs' version '6.0.18'
    id 'checkstyle'
    id 'pmd'
    id 'org.sonarqube' version '5.0.0.4638'
}

group = 'com.stockquest'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Rate Limiting with Spring Boot (basic implementation)
    implementation 'com.bucket4j:bucket4j-core:8.0.1'
    implementation 'com.bucket4j:bucket4j-redis:8.0.1'
    
    // AOP for Metrics
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.13.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.13.0'
    
    // OpenAPI/Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13'
    
    // Database
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.flywaydb:flyway-mysql'
    
    // H2 for testing
    testRuntimeOnly 'com.h2database:h2'
    
    // JSON Processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // External API Client
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    
    // Netty DNS Native for macOS - improves DNS resolution performance
    runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.115.Final:osx-aarch_64'
    
    // WebSocket Support
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    
    // AI & Analytics - Phase 7 Advanced Features
    implementation 'org.apache.commons:commons-math3:3.6.1'              // Monte Carlo simulations
    // implementation 'com.github.haifengl:smile-core:3.1.1'              // Machine learning algorithms (fallback mode)
    // implementation 'com.github.haifengl:smile-data:3.1.1'              // Data processing (fallback mode)
    implementation 'org.springframework.boot:spring-boot-starter-cache'   // Advanced caching
    implementation 'com.github.ben-manes.caffeine:caffeine:3.2.2'        // High-performance caching
    implementation 'org.ehcache:ehcache:3.10.8'                          // Hibernate second-level cache
    implementation 'io.projectreactor:reactor-tools'                     // Reactor debugging tools
    implementation 'org.springframework.boot:spring-boot-starter-mail'    // Email alerts for risk monitoring
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:mysql'
    testImplementation 'org.testcontainers:testcontainers'
    testRuntimeOnly 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:mysql://127.0.0.1:3306/stockquest?serverTimezone=UTC&characterEncoding=UTF-8&useUnicode=true&allowPublicKeyRetrieval=true&useSSL=false'
    user = 'root'
    password = 'rootpassword'
    driver = 'com.mysql.cj.jdbc.Driver'
    baselineOnMigrate = true
}

configurations {
    flywayRuntime.extendsFrom runtimeClasspath
}

// JaCoCo Configuration
jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
}

test.finalizedBy jacocoTestReport

// SpotBugs Configuration
spotbugs {
    ignoreFailures = true
    showStackTraces = true
    showProgress = true
}

spotbugsMain {
    reports {
        html {
            required = true
            destination = file("$buildDir/reports/spotbugs/main.html")
        }
    }
}

spotbugsTest {
    reports {
        html {
            required = true
            destination = file("$buildDir/reports/spotbugs/test.html")
        }
    }
}

// Checkstyle Configuration
checkstyle {
    toolVersion = '10.12.5'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    maxWarnings = 0
    ignoreFailures = true
}

// PMD Configuration
pmd {
    toolVersion = '6.55.0'
    consoleOutput = true
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
    ruleSets = []
    ignoreFailures = true
}

// SonarQube Configuration
sonar {
    properties {
        property 'sonar.projectKey', 'stockquest'
        property 'sonar.projectName', 'Stock Quest'
        property 'sonar.projectVersion', version
        property 'sonar.sources', 'src/main/java'
        property 'sonar.tests', 'src/test/java'
        property 'sonar.java.binaries', 'build/classes/java/main'
        property 'sonar.java.coveragePlugin', 'jacoco'
        property 'sonar.coverage.jacoco.xmlReportPaths', 'build/reports/jacoco/test/jacocoTestReport.xml'
    }
}